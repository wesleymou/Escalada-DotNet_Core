// <auto-generated />
using System;
using Escalada.Service;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Escalada.Migrations
{
    [DbContext(typeof(EscaladaContext))]
    partial class EscaladaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Escalada.Models.Agreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("EventId")
                        .HasColumnName("eventid")
                        .HasColumnType("integer");

                    b.Property<int?>("ProviderId")
                        .HasColumnName("providerid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("ProviderId");

                    b.ToTable("agreement");
                });

            modelBuilder.Entity("Escalada.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cpf")
                        .HasColumnName("cpf")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .HasColumnName("endereco")
                        .HasColumnType("text");

                    b.Property<bool>("Excluido")
                        .HasColumnName("excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("text");

                    b.Property<string>("NumFone1")
                        .HasColumnName("numfone1")
                        .HasColumnType("text");

                    b.Property<string>("NumFone2")
                        .HasColumnName("numfone2")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("Escalada.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Capacidade")
                        .HasColumnName("capacidade")
                        .HasColumnType("integer");

                    b.Property<string>("Cronograma")
                        .HasColumnName("cronograma")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnName("datainicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnName("datatermino")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Excluido")
                        .HasColumnName("excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("Local")
                        .HasColumnName("local")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("text");

                    b.Property<decimal>("OrcamentoPrevio")
                        .HasColumnName("orcamentoprevio")
                        .HasColumnType("numeric");

                    b.Property<int>("Quorum")
                        .HasColumnName("quorum")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusId")
                        .HasColumnName("statusid")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorIngresso")
                        .HasColumnName("valoringresso")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("events");
                });

            modelBuilder.Entity("Escalada.Models.EventStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnName("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("eventstatus");
                });

            modelBuilder.Entity("Escalada.Models.Inscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CustomerId")
                        .HasColumnName("customerid")
                        .HasColumnType("integer");

                    b.Property<int?>("EventId")
                        .HasColumnName("eventid")
                        .HasColumnType("integer");

                    b.Property<int>("QtdAdulto")
                        .HasColumnName("qtdadulto")
                        .HasColumnType("integer");

                    b.Property<int>("QtdInfantil")
                        .HasColumnName("qtdinfantil")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoPagamentoId")
                        .HasColumnName("tipopagamentoid")
                        .HasColumnType("integer");

                    b.Property<decimal>("ValorRecebido")
                        .HasColumnName("valorrecebido")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnName("valortotal")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EventId");

                    b.HasIndex("TipoPagamentoId");

                    b.ToTable("inscription");
                });

            modelBuilder.Entity("Escalada.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Description")
                        .HasColumnName("description")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("paymenttypes");
                });

            modelBuilder.Entity("Escalada.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("providers");
                });

            modelBuilder.Entity("Escalada.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("login")
                        .HasColumnName("login")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnName("password")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Escalada.Models.Agreement", b =>
                {
                    b.HasOne("Escalada.Models.Event", "Event")
                        .WithMany("Fornecedores")
                        .HasForeignKey("EventId");

                    b.HasOne("Escalada.Models.Provider", "Provider")
                        .WithMany("AgreementId")
                        .HasForeignKey("ProviderId");
                });

            modelBuilder.Entity("Escalada.Models.Event", b =>
                {
                    b.HasOne("Escalada.Models.EventStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("Escalada.Models.Inscription", b =>
                {
                    b.HasOne("Escalada.Models.Customer", null)
                        .WithMany("Inscricoes")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Escalada.Models.Event", null)
                        .WithMany("Inscricoes")
                        .HasForeignKey("EventId");

                    b.HasOne("Escalada.Models.PaymentType", "TipoPagamento")
                        .WithMany()
                        .HasForeignKey("TipoPagamentoId");
                });
#pragma warning restore 612, 618
        }
    }
}
